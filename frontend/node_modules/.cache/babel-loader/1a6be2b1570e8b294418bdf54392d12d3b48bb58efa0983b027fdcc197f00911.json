{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jyoti\\\\codefiles\\\\chat_app\\\\frontend\\\\src\\\\components\\\\ConnectionTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { apiHelpers } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectionTest = () => {\n  _s();\n  const [connectionStatus, setConnectionStatus] = useState('testing');\n  const [backendInfo, setBackendInfo] = useState(null);\n  const [error, setError] = useState(null);\n  const testConnection = async () => {\n    try {\n      setConnectionStatus('testing');\n      setError(null);\n      console.log('Testing connection to backend...');\n\n      // Test basic connection\n      const response = await apiHelpers.testConnection();\n      console.log('Backend response:', response.data);\n      setBackendInfo(response.data);\n      setConnectionStatus('connected');\n    } catch (error) {\n      console.error('Connection test failed:', error);\n      setError(error.message);\n      setConnectionStatus('failed');\n    }\n  };\n  useEffect(() => {\n    testConnection();\n  }, []);\n  const testSignup = async () => {\n    try {\n      const testData = {\n        name: 'Test User',\n        email: `test${Date.now()}@example.com`,\n        mobile: `98765${Math.floor(Math.random() * 10000)}`,\n        password: 'Test123'\n      };\n      console.log('Testing signup with:', testData);\n      const response = await apiHelpers.signup(testData);\n      console.log('Signup test result:', response.data);\n      alert('Signup test successful!');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Signup test failed:', error);\n      alert(`Signup test failed: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed top-4 right-4 bg-white border border-gray-300 rounded-lg p-4 shadow-lg z-50 max-w-sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-bold text-lg mb-3\",\n      children: \"Connection Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `px-2 py-1 rounded text-sm ${connectionStatus === 'connected' ? 'bg-green-100 text-green-800' : connectionStatus === 'failed' ? 'bg-red-100 text-red-800' : 'bg-yellow-100 text-yellow-800'}`,\n          children: connectionStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), backendInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-600\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Port: \", backendInfo.port]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Env: \", backendInfo.environment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Time: \", new Date(backendInfo.timestamp).toLocaleTimeString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-red-600 bg-red-50 p-2 rounded\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-2 pt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: testConnection,\n          className: \"px-3 py-1 bg-blue-500 text-white rounded text-xs hover:bg-blue-600\",\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), connectionStatus === 'connected' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: testSignup,\n          className: \"px-3 py-1 bg-green-500 text-white rounded text-xs hover:bg-green-600\",\n          children: \"Test Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-500 mt-2\",\n        children: \"Expected: http://localhost:8000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectionTest, \"Zp1CE5j2jpC4NVKJRnrS1Dq0b2A=\");\n_c = ConnectionTest;\nexport default ConnectionTest;\nvar _c;\n$RefreshReg$(_c, \"ConnectionTest\");","map":{"version":3,"names":["React","useState","useEffect","apiHelpers","jsxDEV","_jsxDEV","ConnectionTest","_s","connectionStatus","setConnectionStatus","backendInfo","setBackendInfo","error","setError","testConnection","console","log","response","data","message","testSignup","testData","name","email","Date","now","mobile","Math","floor","random","password","signup","alert","_error$response","_error$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","port","environment","timestamp","toLocaleTimeString","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jyoti/codefiles/chat_app/frontend/src/components/ConnectionTest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { apiHelpers } from '../utils/api';\r\n\r\nconst ConnectionTest = () => {\r\n  const [connectionStatus, setConnectionStatus] = useState('testing');\r\n  const [backendInfo, setBackendInfo] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const testConnection = async () => {\r\n    try {\r\n      setConnectionStatus('testing');\r\n      setError(null);\r\n      \r\n      console.log('Testing connection to backend...');\r\n      \r\n      // Test basic connection\r\n      const response = await apiHelpers.testConnection();\r\n      console.log('Backend response:', response.data);\r\n      \r\n      setBackendInfo(response.data);\r\n      setConnectionStatus('connected');\r\n      \r\n    } catch (error) {\r\n      console.error('Connection test failed:', error);\r\n      setError(error.message);\r\n      setConnectionStatus('failed');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    testConnection();\r\n  }, []);\r\n\r\n  const testSignup = async () => {\r\n    try {\r\n      const testData = {\r\n        name: 'Test User',\r\n        email: `test${Date.now()}@example.com`,\r\n        mobile: `98765${Math.floor(Math.random() * 10000)}`,\r\n        password: 'Test123'\r\n      };\r\n      \r\n      console.log('Testing signup with:', testData);\r\n      const response = await apiHelpers.signup(testData);\r\n      console.log('Signup test result:', response.data);\r\n      alert('Signup test successful!');\r\n      \r\n    } catch (error) {\r\n      console.error('Signup test failed:', error);\r\n      alert(`Signup test failed: ${error.response?.data?.message || error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed top-4 right-4 bg-white border border-gray-300 rounded-lg p-4 shadow-lg z-50 max-w-sm\">\r\n      <h3 className=\"font-bold text-lg mb-3\">Connection Test</h3>\r\n      \r\n      <div className=\"space-y-2\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <span>Status:</span>\r\n          <span className={`px-2 py-1 rounded text-sm ${\r\n            connectionStatus === 'connected' ? 'bg-green-100 text-green-800' :\r\n            connectionStatus === 'failed' ? 'bg-red-100 text-red-800' :\r\n            'bg-yellow-100 text-yellow-800'\r\n          }`}>\r\n            {connectionStatus}\r\n          </span>\r\n        </div>\r\n\r\n        {backendInfo && (\r\n          <div className=\"text-xs text-gray-600\">\r\n            <div>Port: {backendInfo.port}</div>\r\n            <div>Env: {backendInfo.environment}</div>\r\n            <div>Time: {new Date(backendInfo.timestamp).toLocaleTimeString()}</div>\r\n          </div>\r\n        )}\r\n\r\n        {error && (\r\n          <div className=\"text-xs text-red-600 bg-red-50 p-2 rounded\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"flex space-x-2 pt-2\">\r\n          <button\r\n            onClick={testConnection}\r\n            className=\"px-3 py-1 bg-blue-500 text-white rounded text-xs hover:bg-blue-600\"\r\n          >\r\n            Retry\r\n          </button>\r\n          \r\n          {connectionStatus === 'connected' && (\r\n            <button\r\n              onClick={testSignup}\r\n              className=\"px-3 py-1 bg-green-500 text-white rounded text-xs hover:bg-green-600\"\r\n            >\r\n              Test Signup\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"text-xs text-gray-500 mt-2\">\r\n          Expected: http://localhost:8000\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConnectionTest;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}