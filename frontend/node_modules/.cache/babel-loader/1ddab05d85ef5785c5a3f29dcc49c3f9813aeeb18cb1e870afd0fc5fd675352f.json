{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jyoti\\\\codefiles\\\\chat_app\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Set auth token in API headers\n  useEffect(() => {\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      // Verify token and get user profile\n      getCurrentUser();\n    } else {\n      delete api.defaults.headers.common['Authorization'];\n      setLoading(false);\n    }\n  }, [token]);\n\n  // Get current user profile\n  const getCurrentUser = async () => {\n    try {\n      const response = await api.get('/auth/profile');\n      if (response.data.success) {\n        setUser(response.data.data.user);\n      }\n    } catch (error) {\n      var _error$response;\n      console.error('Get current user error:', error);\n      // If token is invalid, clear it silently (don't show toast)\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        localStorage.removeItem('token');\n        setToken(null);\n        setUser(null);\n        delete api.defaults.headers.common['Authorization'];\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login function\n  const login = async (emailOrMobile, password) => {\n    try {\n      setLoading(true);\n      const response = await api.post('/auth/login', {\n        emailOrMobile,\n        password\n      });\n      if (response.data.success) {\n        const {\n          user: userData,\n          token: userToken\n        } = response.data.data;\n\n        // Store token and user data\n        localStorage.setItem('token', userToken);\n        setToken(userToken);\n        setUser(userData);\n        toast.success('Login successful!');\n        return {\n          success: true\n        };\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Login error:', error);\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Signup function\n  const signup = async userData => {\n    try {\n      setLoading(true);\n      const response = await api.post('/auth/signup', userData);\n      if (response.data.success) {\n        const {\n          user: newUser,\n          token: userToken\n        } = response.data.data;\n\n        // Store token and user data\n        localStorage.setItem('token', userToken);\n        setToken(userToken);\n        setUser(newUser);\n        toast.success('Account created successfully!');\n        return {\n          success: true\n        };\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Signup error:', error);\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Signup failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      // Call logout API to update user status\n      if (token) {\n        await api.post('/auth/logout');\n      }\n    } catch (error) {\n      console.error('Logout API error:', error);\n    } finally {\n      // Clear local storage and state\n      localStorage.removeItem('token');\n      setToken(null);\n      setUser(null);\n      delete api.defaults.headers.common['Authorization'];\n      toast.success('Logged out successfully');\n    }\n  };\n\n  // Update user profile\n  const updateProfile = async profileData => {\n    try {\n      const response = await api.put('/auth/profile', profileData);\n      if (response.data.success) {\n        setUser(response.data.data.user);\n        toast.success('Profile updated successfully!');\n        return {\n          success: true\n        };\n      }\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error('Update profile error:', error);\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Profile update failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Check if user is authenticated\n  const isAuthenticated = () => {\n    return !!(user && token);\n  };\n\n  // Get auth headers for API calls\n  const getAuthHeaders = () => {\n    return token ? {\n      Authorization: `Bearer ${token}`\n    } : {};\n  };\n  const contextValue = {\n    user,\n    token,\n    loading,\n    login,\n    signup,\n    logout,\n    updateProfile,\n    isAuthenticated,\n    getAuthHeaders,\n    getCurrentUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"/pbUqy0QsBvMqKPYubk3+KKKH8I=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","defaults","headers","common","getCurrentUser","response","get","data","success","error","_error$response","console","status","removeItem","login","emailOrMobile","password","post","userData","userToken","setItem","_error$response2","_error$response2$data","message","signup","newUser","_error$response3","_error$response3$data","logout","updateProfile","profileData","put","_error$response4","_error$response4$data","isAuthenticated","getAuthHeaders","Authorization","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jyoti/codefiles/chat_app/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { toast } from 'react-hot-toast';\r\nimport api from '../utils/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  // Set auth token in API headers\r\n  useEffect(() => {\r\n    if (token) {\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      // Verify token and get user profile\r\n      getCurrentUser();\r\n    } else {\r\n      delete api.defaults.headers.common['Authorization'];\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  // Get current user profile\r\n  const getCurrentUser = async () => {\r\n    try {\r\n      const response = await api.get('/auth/profile');\r\n      if (response.data.success) {\r\n        setUser(response.data.data.user);\r\n      }\r\n    } catch (error) {\r\n      console.error('Get current user error:', error);\r\n      // If token is invalid, clear it silently (don't show toast)\r\n      if (error.response?.status === 401) {\r\n        localStorage.removeItem('token');\r\n        setToken(null);\r\n        setUser(null);\r\n        delete api.defaults.headers.common['Authorization'];\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Login function\r\n  const login = async (emailOrMobile, password) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.post('/auth/login', {\r\n        emailOrMobile,\r\n        password\r\n      });\r\n\r\n      if (response.data.success) {\r\n        const { user: userData, token: userToken } = response.data.data;\r\n        \r\n        // Store token and user data\r\n        localStorage.setItem('token', userToken);\r\n        setToken(userToken);\r\n        setUser(userData);\r\n        \r\n        toast.success('Login successful!');\r\n        return { success: true };\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      const message = error.response?.data?.message || 'Login failed';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Signup function\r\n  const signup = async (userData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.post('/auth/signup', userData);\r\n\r\n      if (response.data.success) {\r\n        const { user: newUser, token: userToken } = response.data.data;\r\n        \r\n        // Store token and user data\r\n        localStorage.setItem('token', userToken);\r\n        setToken(userToken);\r\n        setUser(newUser);\r\n        \r\n        toast.success('Account created successfully!');\r\n        return { success: true };\r\n      }\r\n    } catch (error) {\r\n      console.error('Signup error:', error);\r\n      const message = error.response?.data?.message || 'Signup failed';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = async () => {\r\n    try {\r\n      // Call logout API to update user status\r\n      if (token) {\r\n        await api.post('/auth/logout');\r\n      }\r\n    } catch (error) {\r\n      console.error('Logout API error:', error);\r\n    } finally {\r\n      // Clear local storage and state\r\n      localStorage.removeItem('token');\r\n      setToken(null);\r\n      setUser(null);\r\n      delete api.defaults.headers.common['Authorization'];\r\n      toast.success('Logged out successfully');\r\n    }\r\n  };\r\n\r\n  // Update user profile\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const response = await api.put('/auth/profile', profileData);\r\n      \r\n      if (response.data.success) {\r\n        setUser(response.data.data.user);\r\n        toast.success('Profile updated successfully!');\r\n        return { success: true };\r\n      }\r\n    } catch (error) {\r\n      console.error('Update profile error:', error);\r\n      const message = error.response?.data?.message || 'Profile update failed';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  // Check if user is authenticated\r\n  const isAuthenticated = () => {\r\n    return !!(user && token);\r\n  };\r\n\r\n  // Get auth headers for API calls\r\n  const getAuthHeaders = () => {\r\n    return token ? { Authorization: `Bearer ${token}` } : {};\r\n  };\r\n\r\n  const contextValue = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login,\r\n    signup,\r\n    logout,\r\n    updateProfile,\r\n    isAuthenticated,\r\n    getAuthHeaders,\r\n    getCurrentUser\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}